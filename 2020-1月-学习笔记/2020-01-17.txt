1:查询优化器的提示（hint）
1.1：如果对优化器选择的执行计划不满意，可以使用优化器提供的几个提示来控制最终的执行计划。
1.1.1：HIGH_PRIORITY 和 LOW_PRIORITY
HIGH_PRIORITY 用于select预计的时候，Mysql会将此select语句重新调度到所有正在等待表锁一级修改数据的语句前面。
LOW_PRIORITY 会让该语句一直处于等待状态，只要队列中还有需要访问通过一个表的语句-即使是王提交到服务器的语句。
只对使用表锁的存储引擎有效，不要再innoDB或者其他有细粒度锁机制和并发控制的引擎中使用，这两个提示胡导致并发插入被禁用，严重影响性能。
1.1.2 DELAYED
对Insert 和 replace 有效。Mysql会将使用该提示的语句立即返回给客户端，并将插入的行数据放入到缓冲区，然后再表空闲时批量将数据写入。
并不是所有存储引起都支持这样的做法；
并且该提示会导致函数last_insert_id()无法正常工作
1.1.3 staraght_join
这个提示可以防止再select语句的select关键字的后面。可以让查询中所有的表按照语句中出现的顺序进行关联
也可以放在任意两个关联的名字之间。固定前后两个表的关联顺序。
当你确定无论怎样的where条件，某个固定的关联顺序始终时最佳的时候，使用这个提示可以大大提高优化器效率。
升级Mysql版本时需要重新考察下这类查询，某些新的优化特性可能会因为该提示而失败。



